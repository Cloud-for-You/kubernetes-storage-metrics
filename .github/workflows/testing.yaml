name: Testing
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
      - dev

permissions:
  contents: read

jobs:
  static-code-analysis:
    name: Static code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          args: --timeout=30m --config=.golangci.yaml --issues-exit-code=0

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: static-code-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Run unit tests
        run: |
          go test -v ./... -coverprofile=coverage.out -covermode=atomic
          go tool cover -func=coverage.out
          go tool cover -html=coverage.out -o coverage.html
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage.out
            ceverage.html
          retention-days: 7
  
  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - name: Create kind cluster
        uses: engineerd/setup-kind@v0.6.2
        with:
          version: "v0.24.0"
          wait: 180s
          name: ${{ github.ref_name }}
      - name: Testing
        run: |
          kubectl cluster-info
          kubectl version
          kubectl get pods -n kube-system

  create-pull-request:
    name: Create pull request
    runs-on: ubuntu-latest
    needs: integration-tests
    if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        with:
          branch: ${{ github.ref_name }}
          title: 'Update dev branch'
          body: 'This PR updates the dev branch with the latest changes.'
          commit-message: 'Update dev branch'
          base: dev